name: Qodana CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: JetBrains/qodana-action@v2023.3
        # env:
        #   QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }} # Qodana Cloud と連携する場合
        with:
          post-pr-comment: false
          use-annotations: ${{ github.event_name != 'push' && 'true' || 'false' }}
          additional-cache-key: qodana-2023.3-
      - if: github.event_name == 'push' # Qodana Cloud と連携しない場合は Job Summaries へ出力
        run: |
          {
            file='${{ runner.temp }}/qodana/results/qodana.sarif.json'
            results="$(cat "$file" | jq -c '.runs[].results[] | { level, location: .locations[0].physicalLocation.artifactLocation.uri, line: .locations[0].physicalLocation.region.startLine, message: .message.text, ruleId }')"
          
            IFS=$'\n'
            for result in $results ; do
              level="$(echo "$result" | jq -r '.level')"
              location="$(echo "$result" | jq -r '.location')"
              line="$(echo "$result" | jq '.line')"
              message="$(echo "$result" | jq -r '.message')"
              ruleId="$(echo "$result" | jq -r '.ruleId')"
          
              case "$level" in
                'error')
                  icon=':no_entry_sign:';;
                'warning')
                  icon=':warning:';;
                'note')
                  #icon=':memo:';;
                  icon=':grey_question:'
                *)
                  icon=':grey_question:'
              esac     
          
              location_url="https://github.com/${{ github.repository }}/blob/${{ github.sha }}/${location}#L${line}-${line}"
          
              echo "- ${icon} line ${line} in [${location}](${location_url})"
              echo "  - **\`${ruleId}\`** ${message}"
            done
          }  >> "$GITHUB_STEP_SUMMARY"
